diff --git a/c/src/lib/libbsp/arm/raspberrypi/startup/bspstart.c b/c/src/lib/libbsp/arm/raspberrypi/startup/bspstart.c
index c5786bf..b034f8f 100644
--- a/c/src/lib/libbsp/arm/raspberrypi/startup/bspstart.c
+++ b/c/src/lib/libbsp/arm/raspberrypi/startup/bspstart.c
@@ -23,7 +23,104 @@
 #include <bsp/stackalloc.h>
 #include <bsp/raspberrypi.h>
 
+//-------------------------------------------------------------------------
+//-------------------------------------------------------------------------
+
+void dummy(unsigned int y)
+{
+   volatile int x;
+   x = y;
+}
+
+
+#define ARM_TIMER_LOD 0x2000B400
+#define ARM_TIMER_VAL 0x2000B404
+#define ARM_TIMER_CTL 0x2000B408
+#define ARM_TIMER_DIV 0x2000B41C
+#define ARM_TIMER_CNT 0x2000B420
+
+#define SYSTIMERCLO 0x20003004
+#define GPFSEL0     0x20200000
+#define GPFSEL1     0x20200004
+#define GPFSEL2     0x20200008
+#define GPSET0      0x2020001C
+#define GPCLR0      0x20200028
+#define GPPUD       0x20200094
+#define GPPUDCLK0   0x20200098
+
+#define TIMEOUT 1000000
+
+
+//-------------------------------------------------------------------------
+int notmain ( void )
+{
+    unsigned int ra;
+
+    //for led
+
+    ra=BCM2835_REG(GPFSEL1);
+    ra&=~(7<<18); //gpio16  OK LED
+    ra|=1<<18; //gpio16 output
+    BCM2835_REG(GPFSEL1) = ra;
+
+    //for jtag
+
+    //alt4 = 0b011 3
+    //alt5 = 0b010 2
+
+
+    BCM2835_REG(GPPUD) = 0;
+    for(ra=0;ra<150;ra++) dummy(ra);
+    BCM2835_REG(GPPUDCLK0) = (1<<4)|(1<<22)|(1<<24)|(1<<25)|(1<<27);
+    for(ra=0;ra<150;ra++) dummy(ra);
+    BCM2835_REG(GPPUDCLK0) = 0;
+
+    ra=BCM2835_REG(GPFSEL0);
+    ra&=~(7<<12); //gpio4
+    ra|=2<<12; //gpio4 alt5 ARM_TDI
+    BCM2835_REG(GPFSEL0) = ra;
+
+    ra=BCM2835_REG(GPFSEL2);
+    ra&=~(7<<6); //gpio22
+    ra|=3<<6; //alt4 ARM_TRST
+    ra&=~(7<<12); //gpio24
+    ra|=3<<12; //alt4 ARM_TDO
+    ra&=~(7<<15); //gpio25
+    ra|=3<<15; //alt4 ARM_TCK
+    ra&=~(7<<21); //gpio27
+    ra|=3<<21; //alt4 ARM_TMS
+    BCM2835_REG(GPFSEL2) = ra;
+
+//ARM_TRST      22 GPIO_GEN3 P1-15 IN  (22 ALT4)
+//ARM_TDO     5/24 GPIO_GEN5 P1-18 OUT (24 ALT4)
+//ARM_TCK    13/25 GPIO_GEN6 P1-22 OUT (25 ALT4)
+//ARM_TDI     4/26 GPIO_GCLK P1-7   IN ( 4 ALT5)
+//ARM_TMS    12/27 CAM_GPIO  S5-11 OUT (27 ALT4)
+
+    //BCM2835_REG(ARM_TIMER_CTL,0x00F90000);
+    //BCM2835_REG(ARM_TIMER_CTL,0x00F90200);
+
+    return 0;
+}
+//-------------------------------------------------------------------------
+//-------------------------------------------------------------------------
+
+
+//-------------------------------------------------------------------------
+//
+// Copyright (c) 2012 David Welch dwelch@dwelch.com
+//
+// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+//
+// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
+//
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+//-------------------------------------------------------------------------
+
 void bsp_start(void)
 {
     bsp_interrupt_initialize();
+
+    notmain();
 }
